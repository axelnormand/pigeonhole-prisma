generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model punbb_ban {
  email    String?
  expire   Int?
  id       Int     @default(autoincrement()) @id
  ip       String?
  message  String?
  username String?

  @@map("punbb_ban")
}

model punbb_category {
  cat_name      String        @default("New Category")
  disp_position Int           @default(0)
  id            Int           @default(autoincrement()) @id
  punbb_forum   punbb_forum[]

  @@map("punbb_categories")
}

model punbb_censoring {
  id           Int    @default(autoincrement()) @id
  replace_with String @default("")
  search_for   String @default("")
}

model punbb_config {
  conf_name  String  @default("") @id
  conf_value String?
}

model punbb_forum {
  cat_id         Int            @default(0)
  disp_position  Int            @default(0)
  forum_desc     String?
  forum_name     String         @default("New forum")
  id             Int            @default(autoincrement()) @id
  last_post      Int?
  last_poster    String?
  last_post_id   Int?
  moderators     String?
  num_posts      Int            @default(0)
  num_topics     Int            @default(0)
  redirect_url   String?
  sort_by        Boolean        @default(false)
  punbb_topic    punbb_topic[]
  punbb_category punbb_category @relation(fields: [cat_id], references: [id])

  @@map("punbb_forums")
}

model punbb_forum_perm {
  forum_id     Int     @default(0)
  group_id     Int     @default(0)
  post_polls   Boolean @default(true)
  post_replies Boolean @default(true)
  post_topics  Boolean @default(true)
  read_forum   Boolean @default(true)

  @@id([group_id, forum_id])
  @@map("punbb_forum_perms")
}

model punbb_group {
  g_delete_posts           Boolean @default(true)
  g_delete_topics          Boolean @default(true)
  g_edit_posts             Boolean @default(true)
  g_edit_subjects_interval Int     @default(300)
  g_id                     Int     @default(autoincrement()) @id
  g_post_flood             Int     @default(30)
  g_post_polls             Boolean @default(true)
  g_post_replies           Boolean @default(true)
  g_post_topics            Boolean @default(true)
  g_read_board             Boolean @default(true)
  g_search                 Boolean @default(true)
  g_search_flood           Int     @default(30)
  g_search_users           Boolean @default(true)
  g_set_title              Boolean @default(true)
  g_title                  String  @default("")
  g_user_title             String?

  @@map("punbb_groups")
}

// The underlying table does not contain a unique identifier and can therefore currently not be handled.
// model punbb_online {
// ident   String  @default("")
// idle    Boolean @default(false)
// logged  Int     @default(0)
// user_id Int     @default(1)
// @@index([user_id], name: "punbb_online_user_id_idx")
// }
model punbb_poll {
  id      Int    @default(autoincrement()) @id
  options String
  pollid  Int    @default(0)
  ptype   Int    @default(0)
  voters  String
  votes   String

  @@map("punbb_polls")
}

model punbb_post {
  edited       Int?
  edited_by    String?
  hide_smilies Boolean     @default(false)
  id           Int         @default(autoincrement()) @id
  message      String
  posted       Int         @default(0)
  poster       String      @default("")
  poster_email String?
  poster_id    Int         @default(1)
  poster_ip    String?
  topic_id     Int         @default(0)
  punbb_topic  punbb_topic @relation(fields: [topic_id], references: [id])
  punbb_user   punbb_user  @relation(fields: [poster_id], references: [id])

  @@index([poster_id, topic_id], name: "punbb_posts_multi_idx")
  @@index([topic_id], name: "punbb_posts_topic_id_idx")
  @@map("punbb_posts")
}

model punbb_rank {
  id        Int    @default(autoincrement()) @id
  min_posts Int    @default(0)
  rank      String @default("")

  @@map("punbb_ranks")
}

model punbb_report {
  created     Int    @default(0)
  forum_id    Int    @default(0)
  id          Int    @default(autoincrement()) @id
  message     String
  post_id     Int    @default(0)
  reported_by Int    @default(0)
  topic_id    Int    @default(0)
  zapped      Int?
  zapped_by   Int?

  @@index([zapped], name: "punbb_reports_zapped_idx")
  @@map("punbb_reports")
}

model punbb_search_cache {
  id          Int    @default(0) @id
  ident       String @default("")
  search_data String

  @@index([ident], name: "punbb_search_cache_ident_idx")
}

// The underlying table does not contain a unique identifier and can therefore currently not be handled.
// model punbb_search_matches {
// post_id       Int     @default(0)
// subject_match Boolean @default(false)
// word_id       Int     @default(0)
// @@index([post_id], name: "punbb_search_matches_post_id_idx")
// @@index([word_id], name: "punbb_search_matches_word_id_idx")
// }
model punbb_search_word {
  id   Int    @default(autoincrement())
  word String @default("") @id

  @@index([id], name: "punbb_search_words_id_idx")
  @@map("punbb_search_words")
}

model punbb_subscription {
  topic_id Int @default(0)
  user_id  Int @default(0)

  @@id([user_id, topic_id])
  @@map("punbb_subscriptions")
}

model punbb_topic {
  closed       Boolean      @default(false)
  forum_id     Int          @default(0)
  id           Int          @default(autoincrement()) @id
  last_post    Int          @default(0)
  last_poster  String?
  last_post_id Int          @default(0)
  moved_to     Int?
  no           String
  num_replies  Int          @default(0)
  num_views    Int          @default(0)
  posted       Int          @default(0)
  poster       String       @default("")
  question     String
  sticky       Boolean      @default(false)
  subject      String       @default("")
  yes          String
  punbb_forum  punbb_forum  @relation(fields: [forum_id], references: [id])
  punbb_post   punbb_post[]

  @@index([forum_id], name: "punbb_topics_forum_id_idx")
  @@index([moved_to], name: "punbb_topics_moved_to_idx")
  @@map("punbb_topics")
}

model punbb_uploaded {
  data      Int
  descr     String
  downs     Int
  file      String
  id        Int    @default(autoincrement()) @id
  size      Int
  uid       Int
  user      String
  user_stat String
}

// The underlying table does not contain a unique identifier and can therefore currently not be handled.
// model punbb_uploads_conf {
// g_id           Int @default(0)
// p_delete       Int @default(0)
// p_globaldelete Int @default(0)
// p_globalview   Int @default(0)
// p_setop        Int @default(0)
// p_upload       Int @default(0)
// p_view         Int @default(0)
// u_fsize        Int @default(0)
// }
model punbb_uploads_type {
  exts String
  id   Int    @default(autoincrement()) @id
  type String

  @@map("punbb_uploads_types")
}

model punbb_user {
  activate_key     String?
  activate_string  String?
  admin_note       String?
  aim              String?
  disp_posts       Int?
  disp_topics      Int?
  email            String       @default("")
  email_setting    Boolean      @default(true)
  group_id         Int          @default(4)
  icq              String?
  id               Int          @default(autoincrement()) @id
  jabber           String?
  language         String       @default("English")
  last_post        Int?
  last_visit       Int          @default(0)
  location         String?
  msn              String?
  notify_with_post Boolean      @default(false)
  num_posts        Int          @default(0)
  password         String       @default("")
  read_topics      String?
  realname         String?
  registered       Int          @default(0)
  registration_ip  String       @default("0.0.0.0")
  save_pass        Boolean      @default(true)
  show_avatars     Boolean      @default(true)
  show_img         Boolean      @default(true)
  show_img_sig     Boolean      @default(true)
  show_sig         Boolean      @default(true)
  show_smilies     Boolean      @default(true)
  signature        String?
  style            String       @default("Oxygen")
  timezone         Float        @default(0)
  title            String?
  url              String?
  username         String       @default("")
  use_avatar       Boolean      @default(false)
  yahoo            String?
  punbb_post       punbb_post[]

  @@index([registered], name: "punbb_users_registered_idx")
  @@index([username], name: "punbb_users_username_idx")
  @@map("punbb_users")
}

model punbb_userthread {
  forum     Int     @default(0)
  last_read Int?
  posted    Boolean @default(false)
  thread    Int     @default(0)
  user      Int     @default(0)

  @@id([user, thread, forum])
}